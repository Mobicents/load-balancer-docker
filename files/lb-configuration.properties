# Mobicents Load Balancer Settings
# For an overview of the Mobicents Load Balancer visit http://docs.google.com/present/view?id=dc5jp5vx_89cxdvtxcm
# The Load balancer will listen for both TCP and UDP connections

# The binding address of the load balancer. This also specifies the 
# default value for both internalHost and externalHost if not specified separately.
host=127.0.0.1
# If set, Proxy will use this address to patch responses from Restcomm so subsequent request will reach the proxy
#public-ip=

# The binding address of the load balancer where clients should connect (if the host property is not specified)
#externalHost=

# The RMI port used for heartbeat signals
rmiRegistryPort=2000
# The port to be used used for the Remote Object
rmiRemoteObjectPort=2001

# The SIP port used where client should connect
externalPort=5060
# The SIP TLS port used where clients should connect
externalSecurePort=5061

# The binding address of the load balancer where SIP application servers should connect (if the host property is not specified)
#internalHost=127.0.0.1

# The SIP port from where servers will receive messages
# delete if you want to use only one port for both inbound and outbound)
# if you like to activate the integrated HTTP load balancer, this is the entry point
internalPort=5065
# The SIP TLS port from where servers will receive messages
internalSecurePort=5066
 
# The HTTP port for HTTP forwarding
httpPort=2080
# The HTTPS port for HTTPS forwarding
httpsPort=2081
#If no nodes are active the LB can redirect the traffic to the unavailableHost specified in this property,
#otherwise, it will return 503 Service Unavailable
#unavailableHost=google.com

#Specify UDP or TCP or TLS (for now both must be the same)
internalTransport=UDP
externalTransport=UDP
#Enables ws/wss transport
isTransportWs=true
# If you are using IP load balancer, put the IP address and port here, for TLS put externalSecureIpLoadBalancerPort
#externalIpLoadBalancerAddress=127.0.0.1
#externalIpLoadBalancerPort=111
#externalSecureIpLoadBalancerPort=112
 
# Requests initited from the App Servers can route to this address (if you are using 2 IP load balancers for bidirectional SIP LB)
# For TLS put internalSecureIpLoadBalancerPort
#internalIpLoadBalancerAddress=127.0.0.1
#internalIpLoadBalancerPort=111
#internalSecureIpLoadBalancerPort=112
# The addresses in the SIP LB Via headers can be either the real addresses or those specified in the external and internal IP LB addresses

#useIpLoadBalancerAddressInViaHeaders=false

# Designate extra IP addresses as serer nodes
#extraServerNodes=222.221.21.12:21,45.6.6.7:9003,33.5.6.7,33.9.9.2

#Performance Testing mode. Special mode for performance testing of LB server with sipp clients. Set this to true and the extra server nodes will be 
#registered as active nodes and will receive traffic from LB. Also these node will never expire.
performanceTestingMode=false

# Call-ID affinity algortihm settings. This algorithm is the default. No need to uncomment it.
#algorithmClass=org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm
# This property specifies how much time to keep an association before being evitcted.
# It is needed to avoid memory leaks on dead calls. The time is in seconds.
#callIdAffinityMaxTimeInCache=500
#The following attribute specified the policy after failover. If set to true all calls from the failed node
#will go to a new healthy node (all calls to the same node). If set to false the calls will go to random new nodes.
#callIdAffinityGroupFailover=false

# Uncomment to enable the consistent hash based on Call-ID algorithm.
#algorithmClass=org.mobicents.tools.sip.balancer.HeaderConsistentHashBalancerAlgorithm
# This property is not required, it defaults to Call-ID if not set, cna be "from.user" or "to.user" when you want the SIP URI username
#sipHeaderAffinityKey=Call-ID
#specify the GET HTTP parameter to be used as hash key
#httpAffinityKey=appsession
 
# Uncomment to enable the persistent consistent hash based on Call-ID algorithm.
#algorithmClass=org.mobicents.tools.sip.balancer.PersistentConsistentHashBalancerAlgorithm
# This property is not required, it defaults to Call-ID if not set
#sipHeaderAffinityKey=Call-ID
#specify the GET HTTP parameter to be used as hash key
#httpAffinityKey=appsession
 
#This is the JBoss Cache 3.1 configuration file (with jgroups), if not specified it will use default
#persistentConsistentHashCacheConfiguration=/home/config.xml

#If a node doesnt check in within that time (in ms), it is considered dead.
nodeTimeout=8400
#The consistency of the above condition is checked every heartbeatInterval milliseconds
heartbeatInterval=150

#JSIP stack configuration.....
javax.sip.STACK_NAME=SipBalancerForwarder
javax.sip.AUTOMATIC_DIALOG_SUPPORT=off
# You need 16 for logging traces. 32 for debug + traces.
# Your code will limp at 32 but it is best for debugging.
# LOG4J means the level will be configurable from the JOG4J config file
gov.nist.javax.sip.TRACE_LEVEL=LOG4J
#Specify if message contents should be logged.
gov.nist.javax.sip.LOG_MESSAGE_CONTENT=false
gov.nist.javax.sip.DEBUG_LOG=logs/sipbalancerforwarderdebug.txt
gov.nist.javax.sip.SERVER_LOG=logs/sipbalancerforwarder.xml
gov.nist.javax.sip.THREAD_POOL_SIZE=64
gov.nist.javax.sip.REENTRANT_LISTENER=true
gov.nist.javax.sip.AGGRESSIVE_CLEANUP=true
gov.nist.javax.sip.RECEIVE_UDP_BUFFER_SIZE=65536
gov.nist.javax.sip.SEND_UDP_BUFFER_SIZE=65536
# prevent DOS attacks
gov.nist.javax.sip.MAX_LISTENER_RESPONSE_TIME=120
gov.nist.javax.sip.MAX_MESSAGE_SIZE=10000
gov.nist.javax.sip.AGGRESSIVE_CLEANUP=true
gov.nist.javax.sip.MAX_FORK_TIME_SECONDS=0
gov.nist.javax.sip.AUTOMATIC_DIALOG_ERROR_HANDLING=false
gov.nist.javax.sip.MESSAGE_PROCESSOR_FACTORY=gov.nist.javax.sip.stack.NioMessageProcessorFactory

#SMPP Load Balancer Settings
smppName=SMPP Load Balancer
# The address of the load balancer
smppHost=127.0.0.1
# The port of the load balancer
smppPort=2776
# The port of the load balancer for SSL protocol
#smppSslPort=2876
# Remote SMPP servers (use comma between servers and colon between IP and port)
remoteServers=127.0.0.1:10021,127.0.0.1:10022,127.0.0.1:10023
# it is recommended that at any time there were no more than
#10 (ten) SMPP messages are outstanding
maxConnectionSize=10
# Is NIO enabled 
nonBlockingSocketsEnabled=true
# Is default session counters enabled 
defaultSessionCountersEnabled=true
# Response timeout for load balancer in milliseconds
timeoutResponse=10000
# Session initialization timer
timeoutConnection=1000
# Enquire Link Timer
timeoutEnquire=50000
# Time between reconnection
reconnectPeriod=1000
# Connection check timer in load balancer
timeoutConnectionCheckClientSide=1000
# Connection check server side timer
timeoutConnectionCheckServerSide=1000

# SSL configuration
#points to the keystore file we generated before
javax.net.ssl.keyStore=/opt/loadbalancer/config/keystore
#provides the password we used when we generated the keystore
javax.net.ssl.keyStorePassword=123456
#points to the truststore file we generated before
javax.net.ssl.trustStore=/opt/loadbalancer/config/keystore
#provides the password we used when we generated the truststore
javax.net.ssl.trustStorePassword=123456
#this is important because sipp supports only TLSv1 and so we need to restrict the protocols only to that
gov.nist.javax.sip.TLS_CLIENT_PROTOCOLS=TLSv1
#can be : Enabled, Disabled, DisabledAll, Want
#if Enabled, used to request and require client certificate authentication: the connection will terminate if no suitable client certificate is presented
#if Want, used to request client certificate authentication, but keep the connection if no authentication is provided
#if Disabled or DisabledAll does not use authentication
gov.nist.javax.sip.TLS_CLIENT_AUTH_TYPE=Disabled
#ssl will provide some extra debugging information for the SSL if uncomment it
#javax.net.debug=ssl 
# should smpp and http use secured connection towards servers or regular
#isRemoteServerSsl=true

#Statistic
#port for statistic
statisticPort=2006